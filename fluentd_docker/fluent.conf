<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>

<match docker.*>
    @type record_modifier
    tag docker.after.process
</match>
<filter docker.after.process>
  @type record_transformer
  enable_ruby
  <record>
    "type" "container"
    "data" ${require 'json';require "open-uri";html_response = nil;uuid="uuid_123";env_id = "123";namespace="namespace_123";container_name="containername_123";if $g_exid==nil; $g_exid=Hash.new; end; uri='http://169.254.169.250/latest/containers';urienv='http://169.254.169.250/latest/self/host';html_res_env=nil;info_env=nil;   if $g_exid["envid"]==nil; open(urienv,"Accept" => "application/json") do |http| html_res_env = http.read end;info_env=JSON.parse(html_res_env);$g_exid["envid"]=info_env['labels']['caas.hna.environment.id']; end; env_id=$g_exid["envid"];                               if $g_exid[record["container_id"]]==nil; $g_exid[record["container_id"]]=Hash.new; end;  if $g_exid[record["container_id"]]["uuid"]==nil; open(uri,"Accept" => "application/json")  do |http| html_response = http.read end;container_array = JSON.parse(html_response);uuid=record["container_id"];container_array.each do |info| if info['external_id']==uuid;$g_exid[record["container_id"]]["uuid"]=info['labels']['io.rancher.container.uuid'];$g_exid[record["container_id"]]["container_name"]=info['labels']['io.rancher.container.name'];$g_exid[record["container_id"]]["namespace"]=info['labels']['io.rancher.stack.name'];  break;end; end; puts $g_exid;  end;                             if env_id==nil; env_id="123"; end; namespace=$g_exid[record["container_id"]]["namespace"]; if namespace==nil;namespace="name123";end; uuid=$g_exid[record["container_id"]]["uuid"];if uuid==nil; uuid=record["container_id"];end;container_name=$g_exid[record["container_id"]]["container_name"];if container_name==nil;container_name="con123";end;                  log_info = Hash["log_time" => time.strftime('%Y-%m-%dT%H:%M:%S.%L%:z'), "source"=>record["source"],"message"=>record["log"]];json_data = Hash["container_uuid"=>uuid,"environment_id"=>env_id,"namespace"=>namespace,"container_name"=>container_name, "timestamp"=>Time.now.strftime('%Y-%m-%dT%H:%M:%S.%L%:z'), "log_info"=>log_info];json_data.to_json}
  </record>
</filter> 

#in-place to avoid escape character
<filter docker.after.process>
  @type record_transformer
  renew_record true
  keep_keys type,data
</filter>
<match docker.after.process>
    type burrow
    key_name data
   action inplace
   format json
   tag docker.after.process.proc
</match>

<match docker.after.process.proc>
 @type copy
<store>
  @type elasticsearch
  #host 192.168.100.224
  #port 8056
  #hosts 192.168.100.224:8056,192.168.100.225:8056,192.168.100.226:8056
  hosts 10.35.0.1:9200
  reload_connections false
  reload_on_failure false
  logstash_format true
  logstash_prefix container_to_es.log
  flush_interval 10s
  num_threads 2
</store>








</match>
